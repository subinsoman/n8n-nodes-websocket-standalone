name: Build & Publish to NPM

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '18'

jobs:
  test-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test --if-present
        
      - name: Run linting
        run: npm run lint --if-present
        continue-on-error: true
        
      - name: Build package
        run: npm run build --if-present
        
      - name: Extract version from tag
        id: tag-version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG_VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $TAG_VERSION"
          
      - name: Update package.json version
        run: |
          npm version ${{ steps.tag-version.outputs.version }} --no-git-tag-version --allow-same-version
          
      - name: Verify version matches tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${{ steps.tag-version.outputs.version }}
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "Error: Package version ($PACKAGE_VERSION) doesn't match tag version ($TAG_VERSION)"
            exit 1
          fi
          echo "Version verification passed: $PACKAGE_VERSION"
          
      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Verify publication
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          sleep 30
          npm view $PACKAGE_NAME@${{ steps.tag-version.outputs.version }}
          echo "Successfully published $PACKAGE_NAME@${{ steps.tag-version.outputs.version }}"
